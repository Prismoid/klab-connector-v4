networks:
  provider_default:
    external: true

volumes:
  keycloak_volume:

services:
  nginx:
    image: nginx:1.23.1
    container_name: authz_nginx
    ports:
      - "5080:80"
    volumes:
      - "./nginx/nginx.conf:/etc/nginx/nginx.conf:ro"
      - "./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro"
      - "./nginx/public:/var/www/public"
      - "/etc/localtime:/etc/localtime:ro"
    networks:
      - provider_default
      - default
    restart: always

  fastapi:
    image: authz_fastapi:4.0.0
    build: ./fastapi
    container_name: authz_fastapi
    working_dir: /app/
    volumes:
      - "./fastapi/app/:/app/"
      - "./settings.json/:/settings/settings.json"
      - "./settings_provider_setup.json/:/settings/settings_provider_setup.json"
      - "./docker-compose.yaml:/settings/docker-compose.yaml"
      - "./certs/cacert.pem:/etc/docker/certs.d/cacert.pem:ro"
    environment:
      - REQUESTS_CA_BUNDLE=/etc/docker/certs.d/cacert.pem
    command: 'python -m uvicorn main:app --reload --host 0.0.0.0'
    restart: always

  keycloak:
    image: prebuilt_keycloak:19.0.2
    build: ./keycloak
    container_name: authz_keycloak
    volumes:
      - "./certs/cacert.pem:/opt/keycloak/cacert.pem:ro"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres/keycloak
      KC_DB_USERNAME: keycloak_db_user
      KC_DB_PASSWORD: password
      KC_HTTP_RELATIVE_PATH: "/keycloak"
      KC_FEATURES_DISABLED: admin2
      KC_PROXY: "edge"
      JAVA_OPTS_APPEND: "-Dkeycloak.profile=preview -Dkeycloak.profile.feature.upload_scripts=enabled -Dkeycloak.profile.feature.token_exchange=enabled -Dkeycloak.profile.feature.authz_drools_policy=enabled -Dkeycloak.profile.feature.admin_fine_grained_authz=enabled"
      KC_SPI_TRUSTSTORE_FILE_FILE: cacert.p12
      KC_SPI_TRUSTSTORE_FILE_PASSWORD: testbed
      KC_SPI_TRUSTSTORE_FILE_HOSTNAME_VERIFICATION_POLICY: WILDCARD
      KC_SPI_TRUSTSTORE_FILE_TYPE: pkcs12
    depends_on:
      - postgres
    entrypoint: >
      /bin/bash -c "keytool -import -noprompt -file cacert.pem -keystore cacert.jks -storepass testbed
      && keytool -importkeystore -noprompt -srckeystore cacert.jks -srcstorepass testbed -destkeystore cacert.p12 -deststoretype PKCS12 -deststorepass testbed
      && /opt/keycloak/bin/kc.sh start-dev"
    # command: start-dev
    restart: always

  postgres:
    image: postgres:14.4
    container_name: authz_postgres
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak_db_user
      POSTGRES_PASSWORD: password
    volumes:
      - keycloak_volume:/var/lib/postgresql/data
    restart: always
